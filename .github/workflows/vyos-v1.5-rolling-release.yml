name: VyOS v1.5.x release

on:
  push:
    tags:
      - 'v1.5.*'

#env:
#  GIT_CLONE_URL: https://github.com/vyos/vyos-build
#  BRANCH: current
#  ARCHITECTURE: amd64
#  BUILD_BY: vyos-build-action@github.com
#  BUILD_TYPE: release
#  VERSION: 1.4-rolling
#  DEBIAN_MIRROR: http://ftp.us.debian.org/debian/
env:
  GIT_CLONE_URL: https://github.com/vyos/vyos-build
  DEBIAN_MIRROR: http://ftp.us.debian.org/debian/
  BRANCH: sagitta
  BUILD_ARCH: amd64
  BUILD_BY: vyos-build-action@github.com
  BUILD_TYPE: release
  BUILD_VERSION: 1.5.0-rolling
  BUILD_QEMU: false
  BUILD_QCOW2: false
  BUILD_HYPERV: false
  BUILD_VMWARE: false
  PACKER_JSON_PATCH: false
  PACKER_JSON_PATCH_FILE: packer.json_wait-time_equuleus.patch
  VMWARE_OVFTOOL: VMware-ovftool-4.4.1-16812187-lin.x86_64.bundle
  VMWARE_PRIVATE_KEY: private_key_for_signing_vmware_image.pem
  ARTIFACTS_DIR: artifacts
  WORKING_DIR: vyos-build
  STATUS_SUCCESS: "::set-output name=status::success"

jobs:
  build:
    runs-on: ubuntu-latest
    
    container:
      image: vyos/vyos-build:sagitta
      options: --workdir /vyos --privileged

    steps:
      - name: Clone source code
        run: git clone -b $BRANCH --single-branch $GIT_CLONE_URL

      - name: Build ISO
        working-directory: ./vyos-build
        run: |
          sudo make clean
          sudo ./build-vyos-image iso --architecture BUILD_ARCH --build-by $BUILD_BY --build-type $BUILD_TYPE --version $VERSION-$(date +%Y%m%d%H%M)

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso
          path: vyos-build/build/vyos-${{ env.VERSION }}-*.iso

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso
          path: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          asset=$(find ./vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso/ -name "vyos-${{ env.VERSION }}-*.iso" | xargs)
          tag_name="v${{ env.VERSION }}"
          hub release edit -a "$asset" -m "" "$tag_name"

  delete_old_workflow_runs:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Delete old workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 31
